.\"  ptyopen - runs a program on a fake terminal
.\"  ptyopen.1 - man page
.\"  Copyright (C) 1999-2000, 2024 Philippe Troin <phil+github-commits@fifi.org>
.\"
.\"  This program is free software; you can redistribute it and/or modify
.\"  it under the terms of the GNU General Public License as published by
.\"  the Free Software Foundation; either version 3 of the License, or
.\"  (at your option) any later version.
.\"
.\"  This program is distributed in the hope that it will be useful,
.\"  but WITHOUT ANY WARRANTY; without even the implied warranty of
.\"  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\"  GNU General Public License for more details.
.\"
.\"  You should have received a copy of the GNU General Public License
.\"  along with this program; if not, write to the Free Software
.\"  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
.TH PTYOPEN 1 "" "Debian" ""

.SH NAME
ptyopen \- Runs a command in a pseudo-terminal and redirects it to stdin/stdout

.SH SYNOPSIS
.B ptyopen
[-v] [--verbose] [-V] [--version] [-u] [--unsecure] [-w] [--write] [-r
.I size
] [ --ringsize
.I size
] [-g
.I geometry
] [--geometry
.I geometry
] [-h] [--help]
.I command [arguments...]

.SH DESCRIPTION
.PP
.B ptyopen
creates a pseudo-terminal and runs the specified
.I command
with its
.I arguments
in it. All tty output of the slave
.I command
is redirected to
.B ptyopen's
stdout. All data fed into
.B ptyopen's
stdin is presented to the slave
.I command
as terminal input.
.PP
.B ptyopen
is useful to control programmatically commands that use the terminal
directly (typically by opening /dev/tty), like
.B dump(1)
or
.B telnet(1)
for example.

.SH OPTIONS
.TP
.I -v, --verbose
Runs verbosely. Namely,
.B ptyopen
will report "benign" errors while handling terminal capabilities and
window sizing.
.B ptyopen
will also report verbosely the exit code of
.I command.

.TP
.I -V, --version
Prints
.B ptyopen's
version.

.TP
.I -u, --unsecure
If running under a system which requires
.B ptyopen
to be setuid root, the unsecure option allows
.B ptyopen
to run without changing the permissions and ownership of the
pseudo-terminal (and indeed makes
.B ptyopen
usable without making it setuid, at the expense of security). This
option is not available on systems not requiring
.B ptyopen
to be setuid root (Linux >= 2.2 with glibc >= 2.1, Solaris, ...)

.TP
.I -w, --write
Allows write permissions to the pseudo-terminal. This is probably useless,
unless you're running some interactive shell under
.B ptyopen.

.TP
.I -r, --ringsize <size>
Takes an argument, the number of bytes of
.B ptyopen's
input and output buffers. When writing to
.B ptyopen's
stdin,
.B ptyopen
buffers some amount of data. Similarly, when the
.I program
writes to the terminal,
.B ptyopen
buffers the output before sending it to stdout.
One might want to change the default buffer size for obscure reasons.

.TP
.I -g, --geometry <geometry>
Makes
.I program
believe it runs in a terminal whose size is given by
.I <geometry>.
For example 80x25 or 132x50.

.TP
.I -h, --help
Prints a summary of these options.

.SH NOTES
.SS SIGNALS
.B ptyopen
traps almost all common deadly signals so that the pseudo-terminal
permissions are restored correctly.

.PP
.B ptyopen
also handles SIGTSTP and SIGCONT so that the slave
.I command
gets stopped and restarted when
.B ptyopen's
state changes.

.PP
Finally, window size changes get communicated correctly through
SIGWINCH, unless the
.I -g
or
.I --geometry
(forced geometry) options are used.

.SS BUFFERS
.B ptyopen
uses some internal buffers, which can be resized with the
.I -r
or
.I --ringsize
options. These buffers are in used in addition to the buffers used by
the pseudo-terminal driver, and eventually the pipes and sockets
connected to
.B ptyopen's
stdin and stdout.

.SS END OF FILE
If
.B ptyopen's
stdin is closed, then an EOF character (as determined by the
pseudo-terminal's capabilities) is sent to the terminal. Whether or not
the slave
.I command
will take action on this EOF character depends on the
.I command
itself, and not
.B ptyopen.

.SS EXIT CODE
.B ptyopen
exits with the exit code of the slave
.I command
unless it encounters some error. In that case it will exit with 255.

.SH SECURITY
On BSD systems,
.B ptyopen
needs to be setuid root so that the pseudo-terminal's permissions and
ownership can be changed.
.B ptyopen
will refuse to run without being setuid root (unless the
.I -u
or
.I --unsecure
options are used).
.PP
Although great care has been taken to ensure that
.B ptyopen
does not present a security risk, your mileage may vary.

.SH SEE ALSO
.B expect(1), pty(7).

.SH AUTHOR
Written and Copyright (C) 1998-2024 Philippe Troin <phil+github-commits@fifi.org>.
THIS PROGRAM COMES WITH ABSOLUTELY NO WARRANTY.

.SH HISTORY
This program was written as a way to control
.B dump(8)
from a backup script.
\"  LocalWords:  ptyopen Troin phil Exp Debian stdin stdout unsecure ringsize
\"  LocalWords:  ptyopen's programmatically setuid glibc Solaris SIGTSTP EOF
\"  LocalWords:  SIGCONT SIGWINCH pty
